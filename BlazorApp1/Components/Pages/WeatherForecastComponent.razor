@page "/weather-forecast"
@using System.Net.Http
@using System.Text.Json
@using System.Threading.Tasks
@using System.Text.Json.Serialization
@rendermode InteractiveServer

<h3>Weather Forecast</h3>

<button @onclick="GetWeatherData">Get Weather Data</button>

@if (weathers != null && weathers.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temperature (C)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var weather in weathers)
            {
                <tr>
                    <td>@weather.Date.ToShortDateString()</td>
                    <td>@weather.TemperatureC</td>
                    <td>@weather.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> weathers;

    private async Task GetWeatherData()
    {
        try
        {
            HttpClient client = new HttpClient();
            var result = await client.GetAsync("https://localhost:7233/WeatherForecast");
            result.EnsureSuccessStatusCode();

            var weatherString = await result.Content.ReadAsStringAsync();
            weathers = JsonSerializer.Deserialize<List<WeatherForecast>>(weatherString);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private class WeatherForecast
    {
        [JsonPropertyName("date")]
        public DateTime Date { get; set; }

        [JsonPropertyName("temperatureC")]
        public int TemperatureC { get; set; }

        [JsonPropertyName("summary")]
        public string Summary { get; set; }
    }
}
